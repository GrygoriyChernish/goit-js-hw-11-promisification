{"version":3,"sources":["js/task-03.js"],"names":["makeTransaction","transaction","Promise","resolve","reject","delay","randomIntegerFromInterval","setTimeout","Math","random","id","time","min","max","floor","logSuccess","console","log","logError","warn","amount","then","catch"],"mappings":";AAEA,IAAMA,EAAkB,SAACC,GAGhB,OAAA,IAAIC,QAAQ,SAACC,EAASC,GACrBC,IAAAA,EAAQC,EAA0B,IAAK,KAC7CC,WAAW,WACQC,KAAKC,SAAW,IAGjCN,EAAQ,CACJO,GAAIT,EAAYS,GAChBC,KAAMN,IAGZD,EAAOH,EAAYS,KAChBL,MAIP,SAASC,EAA2BM,EAAKC,GAChCL,OAAAA,KAAKM,MAAMN,KAAKC,UAAYI,EAAMD,EAAM,GAAKA,GAGtD,SAASG,EAAwB,GAAXL,IAAAA,EAAAA,EAAAA,GAAIC,EAAAA,EAAAA,KACxBK,QAAQC,IAAmBP,eAAAA,OAAAA,EAAmBC,kBAAAA,OAAAA,EAA9C,OAGF,SAASO,EAAWR,GAClBM,QAAQG,KAAqCT,gCAAAA,OAAAA,EAA7C,8BAIFV,EAAgB,CAAEU,GAAI,GAAIU,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,GAETlB,EAAgB,CAAEU,GAAI,GAAIU,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,GAETlB,EAAgB,CAAEU,GAAI,GAAIU,OAAQ,KAC/BC,KAAKN,GACLO,MAAMJ,GAETlB,EAAgB,CAAEU,GAAI,GAAIU,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ","file":"task-03.585436fd.js","sourceRoot":"../src","sourcesContent":["// Перепиши функцию makeTransaction() так, чтобы она не использовала callback-функции onSuccess и onError, а принимала всего один параметр transaction и возвращала промис.\n\nconst makeTransaction = (transaction) => {\n  \n  \n  return new Promise((resolve, reject) => {\n    const delay = randomIntegerFromInterval(200, 500);\n    setTimeout(() => {\n    const canProcess = Math.random() > 0.3;\n\n    if (canProcess) {\n      resolve({\n          id: transaction.id,\n          time: delay,\n        });\n    }\n    reject(transaction.id);\n    }, delay);\n  })\n};\n\nfunction randomIntegerFromInterval (min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nfunction logSuccess ({id, time}) {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nfunction logError  (id)  {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n\nmakeTransaction({ id: 70, amount: 150 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 })\n  .then(logSuccess)\n  .catch(logError);"]}